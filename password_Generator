import React from 'react'
import {useState,useCallback,useEffect,useRef} from "react";
function App() {
  const [length, setlength] = useState(8);
  const [numberallowed, setnumberallowed] = useState(false);
  const [characters, setcharacters] = useState(false);
  const [password, setpassword] = useState("");
//ref hook
const passwordRef =useRef(null) 
// use callback accepts a function and dependencies as parameters
const pskgenerator=useCallback(anyfunction,[length,characters,numberallowed,setpassword])

// method
const copyPasswordToClipboard= useCallback(()=>{
  passwordRef.current?.select();
  passwordRef.current?.setselectionrange(0,3)
  window.navigator.clipboard.writeText(password)},[password])

function anyfunction(){
let pass=""
let str="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"
if (numberallowed) str=str+"0123456789"
if(characters) str=str+"*&%$"
for(let i=1;i<=length;i++){

  // ek random number generate krke usko * kr denge str.length se and ek number aaega use char m save kreneg
  let char=Math.floor(Math.random() * str.length +1)
  console.log(char)
  // jo char se number aaya tha uss position par jo alphabet aaega str ,use pass m concatinate kr denge
  pass=pass+str.charAt(char)
  console.log(pass)
}
setpassword(pass)
  }
  useEffect(()=>{pskgenerator()},[length,numberallowed,characters,pskgenerator])
  return (

    <>
    <div className="flex-col">
    <div className="w-96 max-w-md h-auto mx-auto rounded-lg px-4 py-4 mt-8 text-orange-400 bg-gray-600">
    <h1 className='text-white text-center text-4xl mt-2 '>Pasword Generator</h1>
    <div className="flex rounded-xl overflow-hidden mb-4 my-1">

      {/* input */}
    <input type="text" value={password} placeholder="password" readOnly className="outline-none w-full py-1 px-3" 
    ref={passwordRef} 
    />
    <button className='rounded-xl bg-black' onClick={copyPasswordToClipboard}>copy</button>

    
    </div>
    </div>
    {/* 2nd block */}

    {/* 1 div */}
    <div className="w-fit max-w-lg h-6 bg-gray-700 mx-auto my-0 rounded-xl justify-center flex ">

      {/* input : range ie slider */}
      <input type="range" min={6} max={100} value={length} className='cursor-auto
      
      hover:shadow-lg hover:shadow-pink-500/40 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none'

    
       onChange={(e)=>{setlength(e.target.value)}}></input>
       <label className='mx-2 text-orange-600'>Length:{length}</label>

      {/* copy button */}
      <button className='items-center my-auto btn outline-1 text-center cursor-pointer hover:bg-slate-800 bg-amber-50 mx-3 px-2 justify-center'>click</button>

     {/* checkbox num */}
      <input type="checkbox" className="px-1" defaultChecked={numberallowed} onChange={()=>{setnumberallowed((prev)=>!prev) ; console.log(numberallowed)}
   }/><label>number</label>
{/* checkbox number_Allowed */}
 <input type="checkbox" className="px-2 mx-2 bg-yellow-500" defaultChecked={numberallowed} onChange={()=>{setcharacters((prev)=>!prev) ; console.log(characters)}
   }/><label>characters</label>

    </div>
    </div>
    </>
  )
}

export default App

